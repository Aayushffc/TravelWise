version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: /Backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=db;Database=TravelWise;User Id=sa;Password=Pass@123;TrustServerCertificate=True;
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@123
      - MSSQL_PID=Express
    volumes:
      - mssql_data:/var/opt/mssql/data
      - mssql_log:/var/opt/mssql/log
    healthcheck:
      test: [ "CMD", "/opt/mssql/bin/sqlservr", "--version" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mssql_data:
    driver: local
  mssql_log:
    driver: local
